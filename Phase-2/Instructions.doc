This file will provide the instructions for testing out the code with the flow which can be followed over remix ide.

1. addBank - First of all, add a Bank with bankName, ethAddress, regNumber

2. addCustomer - Add a Customer, with the parameters userName, customerData (A bank verifies the customer KYC data which is then added to the customer list)

3. setPassword - Set password for the user with setPassword function

4. addBank - Add another bank with bankName, ethAddress, regNumber

5. bankUpvote - Call bankUpvote and enter the ethAddress of the bank 

6. Upvote a bank from different banks (Banks can also provide votes and ratings on other banks to showcase the authenticity of the banks. These ratings are important as KYC requests which are from banks with rating above 0.5 are only considered for validation. And banks with very poor rating might be removed by the admin.)

7. customerUpvote - Call customerUpvote from the bank interface by entering username

8. Upvote a customer from different banks (Other banks can also provide votes on customer data, to showcase the authenticity of the data. These votes are then used to calculate customer rating and once this rating goes above 0.5 then the customer gets added to the final customer list which means that the customer is a trusted customer and such trusted customers are given additional benefits or offers by the bank.)

9. addKycRequest - with the username and customerData (Bank collects the information for the KYC from Customer the information collected includes User Name and Customer data which is the hash link for the data present at a secure storage. This username and hash are unique for each customer. Though there could be multiple KYC requests of same username. A bank creates the request for submission which is stored in the smart contract.)

10. modifyCustomer - modify the customer by entering the username and password and then enter the desired customerData

11. getBankDetails - get the bank details by calling getBankDetails and enter ethAddress of the bank

12. getBankRating - get the bank ratings by calling getBankRating and enter ethAddress of the bank

13. getBankRequests - get the bank requests by calling getBankRequests and enter ethAddress of the bank

14. getCustomerRatings - get the customer ratings by calling getCustomerRatings and enter username

15. removeBank - remove a bank by calling removeBank and providing the ethAddress of the bank (banks with very poor rating can be removed by the admin)

16. removeCustomer - remove a customer by calling removeCustomer and providing the username of the customer

17. removeKYCRequests - remove a Kyc Request by calling removeKYCRequests and providing the username & customerData of customer

18. viewCustomer - enter the username and password to view customer details

19. retrieveHistory - finally retrieve the history of user by providing the username